(function(){var a;a=window.App=Ember.Application.create(),a.ApplicationSerializer=DS.RESTSerializer.extend(DS.EmbeddedRecordsMixin,{keyForAttribute:function(a){return Ember.String.capitalize(a)},extract:function(a,b,c,d,e){var f;return f={},f[Ember.String.pluralize(Ember.String.camelize(b.toString().split(".")[1]))]=c.Entries,this._super(a,b,f,d,e)},normalize:function(a,b,c){return null==b.id&&(b.id=Em.generateGuid({},a)),this._super(a,b,c)},serializeAttribute:function(a,b,c,d){var e;if("value"!==c)return this._super(a,b,c,d);switch(e=a.get("value"),typeof e){case"string":return b.valuestring=e;case"number":return b.value=e;case"object":return b.valuerange=e}}}),function(){}.call(this),function(){a.ApplicationAdapter=DS.RESTAdapter.extend({pathForType:function(a){return Ember.String.capitalize(a)}})}.call(this),function(){a.CodeableConcept=DS.Model.extend({coding:DS.hasMany("coding"),text:DS.attr("string")}),a.CodeableConceptSerializer=a.ApplicationSerializer.extend({attrs:{coding:{embedded:"always"}}})}.call(this),function(){a.Coding=DS.Model.extend({system:DS.attr("string"),version:DS.attr("string"),code:DS.attr("string"),display:DS.attr("string"),primary:DS.attr("boolean"),valueSet:DS.belongsTo("resourceReference")}),a.CodingSerializer=a.ApplicationSerializer.extend({attrs:{valueSet:{embedded:"always"}}})}.call(this),function(){a.EmberItem=DS.Model.extend({parameter:DS.belongsTo("extension"),active:DS.attr("boolean",{defaultValue:!1}),filterType:DS.attr(),template:DS.attr()}),a.EmberItemSerializer=a.ApplicationSerializer.extend({attrs:{parameter:{embedded:"always"}}})}.call(this),function(){a.Encounter=DS.Model.extend({identifier:DS.hasMany("identifier"),status:DS.attr("string"),"class":DS.attr("string"),type:DS.hasMany("codeableConcept"),subject:DS.belongsTo("resourceReference"),participant:DS.hasMany("participant"),fulfills:DS.belongsTo("resourceReference"),period:DS.belongsTo("period"),length:DS.belongsTo("quantity"),reason:DS.belongsTo("codeableConcept"),indication:DS.belongsTo("resourceReference"),priority:DS.belongsTo("codeableConcept"),hospitalization:DS.belongsTo("hospitalization"),location:DS.hasMany("location"),serviceProvider:DS.belongsTo("resourceReference"),partOf:DS.belongsTo("resourceReference")}),a.EncounterSerializer=a.ApplicationSerializer.extend({attrs:{identifier:{embedded:"always"},type:{embedded:"always"},subject:{embedded:"always"},participant:{embedded:"always"},fulfills:{embedded:"always"},period:{embedded:"always"},length:{embedded:"always"},reason:{embedded:"always"},indication:{embedded:"always"},priority:{embedded:"always"},hospitalization:{embedded:"always"},location:{embedded:"always"},serviceProvider:{embedded:"always"},partOf:{embedded:"always"}}}),a.Participant=DS.Model.extend({type:DS.hasMany("codeableConcept"),individual:DS.belongsTo("resourceReference")}),a.ParticipantSerializer=a.ApplicationSerializer.extend({attrs:{type:{embedded:"always"},individual:{embedded:"always"}}}),a.Hospitalization=DS.Model.extend({preAdmissionIdentifier:DS.belongsTo("identifier"),origin:DS.belongsTo("resourceReference"),admitSource:DS.belongsTo("codeableConcept"),period:DS.belongsTo("period"),accomodation:DS.hasMany("accomodation"),diet:DS.belongsTo("codeableConcept"),specialCourtesy:DS.hasMany("codeableConcept"),specialArrangement:DS.hasMany("codeableConcept"),destination:DS.belongsTo("resourceReference"),dischargeDisposition:DS.belongsTo("codeableConcept"),dischargeDiagnosis:DS.belongsTo("resourceReference"),reAdmission:DS.attr("boolean")}),a.HospitalizationSerializer=a.ApplicationSerializer.extend({attrs:{preAdmissionIdentifier:{embedded:"always"},origin:{embedded:"always"},admitSource:{embedded:"always"},period:{embedded:"always"},accomodation:{embedded:"always"},diet:{embedded:"always"},specialCourtesy:{embedded:"always"},specialArrangement:{embedded:"always"},destination:{embedded:"always"},dischargeDisposition:{embedded:"always"},dischargeDiagnosis:{embedded:"always"}}}),a.Location=DS.Model.extend({location:DS.belongsTo("resourceReference"),period:DS.belongsTo("period")}),a.LocationSerializer=a.ApplicationSerializer.extend({attrs:{location:{embedded:"always"},period:{embedded:"always"}}}),a.Accomodation=DS.Model.extend({bed:DS.belongsTo("resourceReference"),period:DS.belongsTo("period")}),a.AccomodationSerializer=a.ApplicationSerializer.extend({attrs:{bed:{embedded:"always"},period:{embedded:"always"}}})}.call(this),function(){a.Extension=DS.Model.extend({url:DS.attr("string"),value:DS.attr()}),a.ExtensionSerializer=a.ApplicationSerializer.extend({attrs:{value:{embedded:"always"}}})}.call(this),function(){a.Filter=DS.Model.extend({name:DS.attr("string"),description:DS.attr("string"),query:DS.belongsTo("query"),panes:DS.hasMany("pane"),buildQuery:function(){var a,b,c,d,e,f;for(this.get("query")||this.set("query",this.store.createRecord("query",{})),a=this.get("panes").map(function(a){return a.get("items").filterBy("active",!0)}),f=[],d=0,e=a.length;e>d;d++)c=a[d],f.push(function(){var a,d,e;for(e=[],a=0,d=c.length;d>a;a++)b=c[a],e.push(this.get("query.parameter").pushObject(b.get("parameter")));return e}.call(this));return f}}),a.FilterSerializer=a.ApplicationSerializer.extend({attrs:{query:{embedded:"always"},panes:{embedded:"always"}}})}.call(this),function(){a.Identifier=DS.Model.extend({use:DS.attr("string"),label:DS.attr("string"),system:DS.attr("string"),value:DS.attr("string"),period:DS.belongsTo("period"),assigner:DS.belongsTo("resourceReference")}),a.IdentifierSerializer=a.ApplicationSerializer.extend({attrs:{period:{embedded:"always"},assigner:{embedded:"always"}}})}.call(this),function(){a.Pane=DS.Model.extend({icon:DS.attr("string",{defaultValue:"fa-user"}),items:DS.hasMany("emberItems")}),a.PaneSerializer=a.ApplicationSerializer.extend({attrs:{items:{embedded:"always"}}})}.call(this),function(){a.Period=DS.Model.extend({start:DS.belongsTo("date"),end:DS.belongsTo("date")}),a.PeriodSerializer=a.ApplicationSerializer.extend({attrs:{start:{embedded:"always"},end:{embedded:"always"}}}),a.Date=DS.Model.extend({time:DS.attr("date"),precision:DS.attr("string")})}.call(this),function(){a.Quantity=DS.Model.extend({value:DS.attr(),comparator:DS.attr("string"),units:DS.attr("string"),system:DS.attr("string"),code:DS.attr("string")})}.call(this),function(){a.Query=DS.Model.extend({identifier:DS.attr("string"),parameter:DS.hasMany("extension"),response:DS.belongsTo("response")}),a.QuerySerializer=a.ApplicationSerializer.extend({attrs:{parameter:{embedded:"always"},response:{embedded:"always"}}}),a.Response=DS.Model.extend({identifier:DS.attr("string"),outcome:DS.attr("string"),total:DS.attr(),parameter:DS.hasMany("extension"),first:DS.hasMany("extension"),previous:DS.hasMany("extension"),next:DS.hasMany("extension"),last:DS.hasMany("extension"),reference:DS.hasMany("reference")}),a.ResponseSerializer=a.ApplicationSerializer.extend({attrs:{parameter:{embedded:"always"},first:{embedded:"always"},previous:{embedded:"always"},next:{embedded:"always"},last:{embedded:"always"},reference:{embedded:"always"}}})}.call(this),function(){a.Range=DS.Model.extend({low:DS.hasMany("quantity"),high:DS.hasMany("quantity")})}.call(this),function(){a.ResourceReference=DS.Model.extend({reference:DS.attr("string"),display:DS.attr("string")})}.call(this),function(){a.ApplicationRoute=Ember.Route.extend({model:function(){return{}}})}.call(this),function(){a.FiltersNewRoute=Em.Route.extend({model:function(){return this.store.createRecord("filter")},actions:{saveFilter:function(){return this.currentModel.buildQuery(),console.log(JSON.stringify(this.currentModel.serialize())),this.currentModel.save()},addPane:function(a){var b,c,d,e;switch(a){case"patient":return e=this.store.createRecord("pane",{id:Em.generateGuid({},"pane")}),d=this.store.createRecord("extension",{id:Em.generateGuid({},"extension"),url:"http://interventionengine.org/patientgender",value:"M"}),c=this.store.createRecord("emberItem",{id:Em.generateGuid({},"emberItem"),parameter:d,filterType:"Patient Gender",template:"partials/_genderFilter"}),e.get("items").pushObjects([c]),this.currentModel.get("panes").pushObject(e);case"encounter":return e=this.store.createRecord("pane",{id:Em.generateGuid({},"pane"),icon:"fa-stethoscope"}),b=this.store.createRecord("emberItem",{id:Em.generateGuid({},"emberItem"),filterType:"Encounter Code",template:"partials/_codeFilter"}),e.get("items").pushObjects([b]),this.currentModel.get("panes").pushObject(e);case"condition":return e=this.store.createRecord("pane",{id:Em.generateGuid({},"pane"),icon:"icon-med-clipboard"}),b=this.store.createRecord("emberItem",{id:Em.generateGuid({},"emberItem"),filterType:"Condition Code",template:"partials/_codeFilter"}),e.get("items").pushObjects([b]),this.currentModel.get("panes").pushObject(e)}}}})}.call(this),function(){a.RadioButtonComponent=Ember.Component.extend({tagName:"input",attributeBindings:["type","checked"],type:"radio",checked:function(){return this.get("value")===this.get("name")}.property("value","name"),click:function(){return this.set("name",this.get("value"))}})}.call(this),function(){a.XDragComponent=Em.Component.extend({dragStart:function(a){return a.dataTransfer.setData("text/data",this.get("templatePath"))}})}.call(this),function(){a.XDropComponent=Ember.Component.extend({dragOver:function(a){return a.preventDefault()},dragEnter:function(a){return $.inArray("text/data",a.dataTransfer.types)>=0?this.set("droppable",!0):void 0},dragLeave:function(){return this.set("droppable",!1)},drop:function(a){var b;return this.set("droppable",!1),b=a.dataTransfer.getData("text/data"),""!==b?this.sendAction("action",b):void 0},actions:{addParam:function(){}}})}.call(this),function(){a.Router.map(function(){return this.resource("filters",function(){return this.route("new")})})}.call(this)}).call(this);